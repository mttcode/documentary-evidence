@model PagedList.IPagedList<DocumentaryEvidence.Models.Document>
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@if (User.Identity.IsAuthenticated == true)
{
<p>
    @Html.ActionLink("Create New", "Create")
</p>
} else { }


@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("Type", "Index", new { sortOrder = ViewBag.TypeSortParm })
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new { sortOrder = ViewBag.AuthorSortParm })
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Author)
        </td>
        <td>

@if (User.Identity.IsAuthenticated == true)
{
    @Html.ActionLink("Edit", "Edit", new { id = item.Id })
    @Html.Label("|", new { style = "width: 10px; padding-left: 10px; padding-right: 10px;"})
    @Html.ActionLink("Details", "Details", new { id = item.Id })
    @Html.Label("|", new { style = "width: 10px; padding-left: 10px; padding-right: 10px;" })
    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
}
else
{
    @Html.ActionLink("Details", "Details", new { id = item.Id })
}

        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
